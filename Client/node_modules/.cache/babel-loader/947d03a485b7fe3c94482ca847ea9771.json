{"ast":null,"code":"import _slicedToArray from \"/Users/gplumblee/Documents/Education Stuff/UCLA-Coding-Bootcamp/Final-Project/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/gplumblee/Documents/Education Stuff/UCLA-Coding-Bootcamp/Final-Project/Client/src/pages/InspirationPage/index.js\";\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Container, Row, Col } from 'reactstrap';\nimport seed from \"../../utils/dailyReflectionSeed\"; // import apicall from \"../../utils/API\";\n// import axios from \"axios\";\n\nimport ReflectionCard from \"../../components/ReflectionCard\";\nimport Date from \"../../components/Date\";\nimport moment from \"moment\";\nimport \"./Inspiration.css\";\nimport bg from '../../assets/daily-reflections.jpg';\n\nvar Reflections = function Reflections() {\n  var month = moment().format(\"MMMM\");\n  var day = moment().format(\"Do\");\n  var d = moment().format(\"D\"); // eslint-disable-next-line\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      reflections = _useState2[0],\n      setReflections = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredReflections = _useState4[0],\n      setFilteredReflections = _useState4[1]; // useEffect(() => {\n  //   document.body.style.backgroundImage = `url(${bg})`\n  //   apicall.getDailyReflections().then((response) => {\n  //     const reflectionList = response.data;\n  //     const date = `${month} ${d}`;\n  //     const todaysReflection = reflectionList.filter((reflection ) => reflection.date === date)[0];\n  //     setFilteredReflections([todaysReflection]);\n  //   });\n  // },[]);\n\n\n  useEffect(function () {\n    setFilteredReflections(reflections.filter(function (a) {\n      return a.date === \"\".concat(month, \" \").concat(d);\n    }));\n  }, [reflections]);\n  useEffect(function () {\n    document.body.style.backgroundImage = \"url(\".concat(bg, \")\");\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    id: \"insp\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: \"2\",\n    id: \"dateBlock\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Date, {\n    mo: month,\n    day: day,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: \"8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, filteredReflections.map(function (data) {\n    return /*#__PURE__*/React.createElement(ReflectionCard, {\n      data: data,\n      key: data.date,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    });\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: \"2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Reflections;","map":{"version":3,"sources":["/Users/gplumblee/Documents/Education Stuff/UCLA-Coding-Bootcamp/Final-Project/Client/src/pages/InspirationPage/index.js"],"names":["React","Fragment","useState","useEffect","Container","Row","Col","seed","ReflectionCard","Date","moment","bg","Reflections","month","format","day","d","reflections","setReflections","filteredReflections","setFilteredReflections","filter","a","date","document","body","style","backgroundImage","map","data"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,YAApC;AACA,OAAOC,IAAP,MAAiB,iCAAjB,C,CACA;AACA;;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,mBAAP;AACA,OAAOC,EAAP,MAAe,oCAAf;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,MAAMC,KAAK,GAAGH,MAAM,GAAGI,MAAT,CAAgB,MAAhB,CAAd;AACA,MAAMC,GAAG,GAAGL,MAAM,GAAGI,MAAT,CAAgB,IAAhB,CAAZ;AACA,MAAME,CAAC,GAAGN,MAAM,GAAGI,MAAT,CAAgB,GAAhB,CAAV,CAHwB,CAIxB;;AAJwB,kBAKcZ,QAAQ,CAAC,EAAD,CALtB;AAAA;AAAA,MAKjBe,WALiB;AAAA,MAKJC,cALI;;AAAA,mBAM8BhB,QAAQ,CAAC,EAAD,CANtC;AAAA;AAAA,MAMjBiB,mBANiB;AAAA,MAMIC,sBANJ,kBAQxB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEAjB,EAAAA,SAAS,CAAC,YAAM;AACdiB,IAAAA,sBAAsB,CACpBH,WAAW,CAACI,MAAZ,CAAmB,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACC,IAAF,eAAcV,KAAd,cAAuBG,CAAvB,CAAP;AAAA,KAAnB,CADoB,CAAtB;AAGD,GAJQ,EAIP,CAACC,WAAD,CAJO,CAAT;AAMAd,EAAAA,SAAS,CAAC,YAAI;AACZqB,IAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,iBAA6ChB,EAA7C;AAED,GAHQ,EAGP,EAHO,CAAT;AAMA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,EAAE,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEE,KAAV;AAAiB,IAAA,GAAG,EAAEE,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,mBAAmB,CAACS,GAApB,CAAwB,UAACC,IAAD;AAAA,wBACvB,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAEA,IAAtB;AAA4B,MAAA,GAAG,EAAEA,IAAI,CAACN,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADuB;AAAA,GAAxB,CADH,CAJF,eASE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADJ,CADF,CADF;AAiBD,CAhDD;;AAkDA,eAAeX,WAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport { Container, Row, Col } from 'reactstrap';\nimport seed from \"../../utils/dailyReflectionSeed\";\n// import apicall from \"../../utils/API\";\n// import axios from \"axios\";\nimport ReflectionCard from \"../../components/ReflectionCard\";\nimport Date from \"../../components/Date\";\nimport moment from \"moment\";\nimport \"./Inspiration.css\";\nimport bg from '../../assets/daily-reflections.jpg'\n\nconst Reflections = () => {\n  const month = moment().format(\"MMMM\");\n  const day = moment().format(\"Do\");\n  const d = moment().format(\"D\");\n  // eslint-disable-next-line\n  const [reflections, setReflections] = useState([]);\n  const [filteredReflections, setFilteredReflections] = useState([]);\n\n  // useEffect(() => {\n  //   document.body.style.backgroundImage = `url(${bg})`\n  //   apicall.getDailyReflections().then((response) => {\n  //     const reflectionList = response.data;\n  //     const date = `${month} ${d}`;\n  //     const todaysReflection = reflectionList.filter((reflection ) => reflection.date === date)[0];\n\n  //     setFilteredReflections([todaysReflection]);\n  //   });\n  // },[]);\n\n  useEffect(() => {\n    setFilteredReflections(\n      reflections.filter((a) => a.date === `${month} ${d}`)\n    );\n  },[reflections]);\n\n  useEffect(()=>{\n    document.body.style.backgroundImage = `url(${bg})`\n\n  },[])\n\n\n  return (\n    <Fragment >\n      <Container id='insp'>\n          <Row>\n            <Col xs=\"2\" id=\"dateBlock\">\n              <Date mo={month} day={day}/>\n            </Col>\n            <Col xs=\"8\">\n              {filteredReflections.map((data) => (\n                <ReflectionCard data={data} key={data.date}/>\n              ))}\n            </Col>\n            <Col xs=\"2\"></Col>\n          </Row>\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default Reflections;\n"]},"metadata":{},"sourceType":"module"}