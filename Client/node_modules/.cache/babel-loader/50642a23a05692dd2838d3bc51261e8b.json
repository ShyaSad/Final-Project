{"ast":null,"code":"import _slicedToArray from \"/Users/gplumblee/Documents/Education Stuff/UCLA-Coding-Bootcamp/Final-Project/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/gplumblee/Documents/Education Stuff/UCLA-Coding-Bootcamp/Final-Project/Client/src/pages/InspirationPage/index.js\";\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Container, Row, Col } from 'reactstrap';\nimport apicall from \"../../utils/API\";\nimport axios from \"axios\";\nimport ReflectionCard from \"../../components/ReflectionCard\";\nimport Date from \"../../components/Date\";\nimport moment from \"moment\";\nimport \"./Inspiration.css\";\nimport bg from '../../assets/daily-reflections.jpg';\n\nvar Reflections = function Reflections() {\n  var month = moment().format(\"MMMM\");\n  var day = moment().format(\"Do\");\n  var d = moment().format(\"D\"); // eslint-disable-next-line\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      reflections = _useState2[0],\n      setReflections = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredReflections = _useState4[0],\n      setFilteredReflections = _useState4[1];\n\n  useEffect(function () {\n    document.body.style.backgroundImage = \"url(\".concat(bg, \")\");\n    apicall.getDailyReflections().then(function (response) {\n      var reflectionList = response.data;\n      var date = \"\".concat(month, \" \").concat(d);\n      var todaysReflection = reflectionList.filter(function (reflection) {\n        return reflection.date === date;\n      })[0];\n      setFilteredReflections([todaysReflection]);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    id: \"insp\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: \"2\",\n    id: \"dateBlock\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Date, {\n    mo: month,\n    day: day,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: \"8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, filteredReflections.map(function (data) {\n    return /*#__PURE__*/React.createElement(ReflectionCard, {\n      data: data,\n      key: data.date,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    });\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: \"2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Reflections;","map":{"version":3,"sources":["/Users/gplumblee/Documents/Education Stuff/UCLA-Coding-Bootcamp/Final-Project/Client/src/pages/InspirationPage/index.js"],"names":["React","Fragment","useState","useEffect","Container","Row","Col","apicall","axios","ReflectionCard","Date","moment","bg","Reflections","month","format","day","d","reflections","setReflections","filteredReflections","setFilteredReflections","document","body","style","backgroundImage","getDailyReflections","then","response","reflectionList","data","date","todaysReflection","filter","reflection","map"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,YAApC;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,mBAAP;AACA,OAAOC,EAAP,MAAe,oCAAf;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,MAAMC,KAAK,GAAGH,MAAM,GAAGI,MAAT,CAAgB,MAAhB,CAAd;AACA,MAAMC,GAAG,GAAGL,MAAM,GAAGI,MAAT,CAAgB,IAAhB,CAAZ;AACA,MAAME,CAAC,GAAGN,MAAM,GAAGI,MAAT,CAAgB,GAAhB,CAAV,CAHwB,CAIxB;;AAJwB,kBAKcb,QAAQ,CAAC,EAAD,CALtB;AAAA;AAAA,MAKjBgB,WALiB;AAAA,MAKJC,cALI;;AAAA,mBAM8BjB,QAAQ,CAAC,EAAD,CANtC;AAAA;AAAA,MAMjBkB,mBANiB;AAAA,MAMIC,sBANJ;;AAQxBlB,EAAAA,SAAS,CAAC,YAAM;AACdmB,IAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,iBAA6Cb,EAA7C;AACAL,IAAAA,OAAO,CAACmB,mBAAR,GAA8BC,IAA9B,CAAmC,UAACC,QAAD,EAAc;AAC/C,UAAMC,cAAc,GAAGD,QAAQ,CAACE,IAAhC;AACA,UAAMC,IAAI,aAAMjB,KAAN,cAAeG,CAAf,CAAV;AACA,UAAMe,gBAAgB,GAAGH,cAAc,CAACI,MAAf,CAAsB,UAACC,UAAD;AAAA,eAAiBA,UAAU,CAACH,IAAX,KAAoBA,IAArC;AAAA,OAAtB,EAAiE,CAAjE,CAAzB;AAEAV,MAAAA,sBAAsB,CAAC,CAACW,gBAAD,CAAD,CAAtB;AACD,KAND;AAOD,GATQ,EASP,EATO,CAAT;AAYA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,EAAE,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAElB,KAAV;AAAiB,IAAA,GAAG,EAAEE,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,mBAAmB,CAACe,GAApB,CAAwB,UAACL,IAAD;AAAA,wBACvB,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAEA,IAAtB;AAA4B,MAAA,GAAG,EAAEA,IAAI,CAACC,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADuB;AAAA,GAAxB,CADH,CAJF,eASE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADJ,CADF,CADF;AAiBD,CArCD;;AAuCA,eAAelB,WAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport { Container, Row, Col } from 'reactstrap';\nimport apicall from \"../../utils/API\";\nimport axios from \"axios\";\nimport ReflectionCard from \"../../components/ReflectionCard\";\nimport Date from \"../../components/Date\";\nimport moment from \"moment\";\nimport \"./Inspiration.css\";\nimport bg from '../../assets/daily-reflections.jpg'\n\nconst Reflections = () => {\n  const month = moment().format(\"MMMM\");\n  const day = moment().format(\"Do\");\n  const d = moment().format(\"D\");\n  // eslint-disable-next-line\n  const [reflections, setReflections] = useState([]);\n  const [filteredReflections, setFilteredReflections] = useState([]);\n\n  useEffect(() => {\n    document.body.style.backgroundImage = `url(${bg})`\n    apicall.getDailyReflections().then((response) => {\n      const reflectionList = response.data;\n      const date = `${month} ${d}`;\n      const todaysReflection = reflectionList.filter((reflection ) => reflection.date === date)[0];\n\n      setFilteredReflections([todaysReflection]);\n    });\n  },[]);\n\n\n  return (\n    <Fragment >\n      <Container id='insp'>\n          <Row>\n            <Col xs=\"2\" id=\"dateBlock\">\n              <Date mo={month} day={day}/>\n            </Col>\n            <Col xs=\"8\">\n              {filteredReflections.map((data) => (\n                <ReflectionCard data={data} key={data.date}/>\n              ))}\n            </Col>\n            <Col xs=\"2\"></Col>\n          </Row>\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default Reflections;\n"]},"metadata":{},"sourceType":"module"}